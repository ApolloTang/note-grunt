$ mkdir project1
~/Desktop
$ cd project1
~/Desktop/project1
$ npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sane defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
name: (project1)
version: (1.0.0)
description: this is a sample project
entry point: (index.js)
test command:
git repository:
keywords:
author: Apollo Tang
license: (ISC)
About to write to /Users/apollotang/Desktop/project1/package.json:

{
  "name": "project1",
  "version": "1.0.0",
  "description": "this is a sample project",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Apollo Tang",
  "license": "ISC"
}



Is this ok? (yes) y
~/Desktop/project1
$ cat package.json
{
  "name": "project1",
  "version": "1.0.0",
  "description": "this is a sample project",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Apollo Tang",
  "license": "ISC"
}
~/Desktop/project1
$ npm install grunt --save-dev
npm WARN package.json project1@1.0.0 No repository field.
npm WARN package.json project1@1.0.0 No README data
grunt@0.4.5 node_modules/grunt
├── which@1.0.8
├── dateformat@1.0.2-1.2.3
├── eventemitter2@0.4.14
├── getobject@0.1.0
├── rimraf@2.2.8
├── colors@0.6.2
├── async@0.1.22
├── hooker@0.2.3
├── grunt-legacy-util@0.2.0
├── exit@0.1.2
├── lodash@0.9.2
├── coffee-script@1.3.3
├── underscore.string@2.2.1
├── iconv-lite@0.2.11
├── grunt-legacy-log@0.1.1 (underscore.string@2.3.3, lodash@2.4.1)
├── nopt@1.0.10 (abbrev@1.0.5)
├── minimatch@0.2.14 (sigmund@1.0.0, lru-cache@2.5.0)
├── findup-sync@0.1.3 (lodash@2.4.1, glob@3.2.11)
├── glob@3.1.21 (inherits@1.0.0, graceful-fs@1.2.3)
└── js-yaml@2.0.5 (esprima@1.0.4, argparse@0.1.16)
~/Desktop/project1
$ cat package.json
{
  "name": "project1",
  "version": "1.0.0",
  "description": "this is a sample project",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Apollo Tang",
  "license": "ISC",
  "devDependencies": {
    "grunt": "^0.4.5"
  }
}
~/Desktop/project1
$ which grunt
/usr/local/bin/grunt
~/Desktop/project1
$ npm install grunt-contrib-jshint --save-dev
npm WARN package.json project1@1.0.0 No repository field.
npm WARN package.json project1@1.0.0 No README data
grunt-contrib-jshint@0.10.0 node_modules/grunt-contrib-jshint
├── hooker@0.2.3
└── jshint@2.5.11 (strip-json-comments@1.0.2, underscore@1.6.0, exit@0.1.2, shelljs@0.3.0, console-browserify@1.1.0, minimatch@1.0.0, cli@0.6.5, htmlparser2@3.8.2)
~/Desktop/project1
$ which grunt-init
/usr/local/bin/grunt-init
~/Desktop/project1
$ npm install -g grunt-initT

